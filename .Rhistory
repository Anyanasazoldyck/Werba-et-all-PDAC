)) +
geom_point(shape = 21, colour = "black",size=10) +
scale_fill_gradient2(
low = "steelblue", mid = "white", high = "red",
midpoint = 0,
name = "Enrichment"
) + scale_alpha(range = c(0.3, 1),
name = "LogFDR") +
labs(
x = "Pathway",
y = "NES",
title = paste0(analysis,"\n",context)
) +
my_theme +
coord_flip()
p=ggplot(gsea_results, aes(
x = reorder(ID, NES),
y = NES,
fill = NES,
alpha=minus_logFDR,
#size = `-logFDR`
)) +
geom_point(shape = 21, colour = "black",size=10) +
scale_fill_gradient2(
low = "steelblue", mid = "white", high = "red",
midpoint = 0,
name = "Enrichment"
) + scale_alpha(range = c(0.3, 1),
name = "LogFDR") +
labs(
x = "Pathway",
y = "NES",
title = paste0("Treated Vs. Naive")
) +
coord_flip()
p
my_theme = theme(
panel.background = element_blank(),
plot.background = element_blank(),
legend.background = element_rect(fill="transparent", colour=NA),
legend.key = element_rect(fill="transparent", colour=NA),
plot.title = element_text(size=12, margin = margin(b = 5),hjust=0,vjust=0.5, family="Arial", face="bold"),
title = element_text(size = 12, margin = margin(b = 5),hjust=0,vjust=0.5, family="Arial", face="bold"),
axis.text.y = element_text(size = 10, margin = margin(r = 5),hjust=1,vjust=0.5, family="Arial", face="bold",colour="black"),
axis.text.x = element_text(size = 10, margin = margin(t = 5),hjust=0.5,vjust=1, family="Arial", face="bold",colour="black"),
axis.title.y = element_text(size = 12, margin = margin(r = 10),angle = 90,hjust=0.5,vjust=0.5, family="Arial", face="bold"),
axis.title.x = element_text(size = 12, margin = margin(t = 10),hjust=0.5,vjust=1, family="Arial", face="bold"),
legend.text=element_text(size=10, family="Arial"),
legend.title=element_text(size=12,family ="Arial"),
legend.key.size=unit(1,"line")
)
p=ggplot(gsea_results, aes(
x = reorder(ID, NES),
y = NES,
fill = NES,
alpha=minus_logFDR,
#size = `-logFDR`
)) +
geom_point(shape = 21, colour = "black",size=10) +
scale_fill_gradient2(
low = "steelblue", mid = "white", high = "red",
midpoint = 0,
name = "Enrichment"
) + scale_alpha(range = c(0.3, 1),
name = "LogFDR") +
labs(
x = "Pathway",
y = "NES",
title = paste0("Treated Vs. Naive")
) +
coord_flip() +my_theme
p
png("halmark.png", width = 300*6, height = 300*6 , res = 300)
p
dev.off()
png("plots/halmark.png", width = 300*6, height = 300*6 , res = 300)
p
dev.off()
# the same analysis but with RECTOME ----------
reactome <- msigdbr(species = "Homo sapiens", category = "C2", subcategory = "CP:REACTOME") |>
select(gs_name, gene_symbol) |> distinct()
# the same analysis but with RECTOME ----------
reactome <- msigdbr(species = "Homo sapiens", category = "C2", subcollection = "CP:REACTOME") |>
select(gs_name, gene_symbol) |> distinct()
write.csv(gsea_results,"csv/hallmark.csv")
gsea_results=clusterProfiler::GSEA(
geneList = gene_list,
TERM2GENE = reactome,
pvalueCutoff = 0.25,
pAdjustMethod = "BH",
verbose = FALSE
)
gsea_results <-gsea_results@result
gsea_results$minus_logFDR= -log10(gsea_results$p.adjust)
p=ggplot(gsea_results, aes(
x = reorder(ID, NES),
y = NES,
fill = NES,
alpha=minus_logFDR,
)) +
geom_point(shape = 21, colour = "black",size=10) +
scale_fill_gradient2(
low = "steelblue", mid = "white", high = "red",
midpoint = 0,
name = "Enrichment"
) + scale_alpha(range = c(0.3, 1),
name = "LogFDR") +
labs(
x = "Pathway",
y = "NES",
title = paste0("Treated Vs. Naive")
) +
coord_flip() +my_theme
p
gsea_results <-gsea_results@result
View(gsea_results)
gsea_results_top <- gsea_results_top[gsea_results$p.adjust<-0.05,]
gsea_results_top <- gsea_results[gsea_results$p.adjust<-0.05,]
gsea_results_top$minus_logFDR= -log10(gsea_results_top$p.adjust)
p=ggplot(gsea_results_top, aes(
x = reorder(ID, NES),
y = NES,
fill = NES,
alpha=minus_logFDR,
)) +
geom_point(shape = 21, colour = "black",size=10) +
scale_fill_gradient2(
low = "steelblue", mid = "white", high = "red",
midpoint = 0,
name = "Enrichment"
) + scale_alpha(range = c(0.3, 1),
name = "LogFDR") +
labs(
x = "Pathway",
y = "NES",
title = paste0("Treated Vs. Naive")
) +
coord_flip() +my_theme
p
View(gsea_results_top)
gsea_results_top <- gsea_results[gsea_results$p.adjust< 0.05,]
gsea_results_top$minus_logFDR= -log10(gsea_results_top$p.adjust)
p=ggplot(gsea_results_top, aes(
x = reorder(ID, NES),
y = NES,
fill = NES,
alpha=minus_logFDR,
)) +
geom_point(shape = 21, colour = "black",size=10) +
scale_fill_gradient2(
low = "steelblue", mid = "white", high = "red",
midpoint = 0,
name = "Enrichment"
) + scale_alpha(range = c(0.3, 1),
name = "LogFDR") +
labs(
x = "Pathway",
y = "NES",
title = paste0("Treated Vs. Naive")
) +
coord_flip() +my_theme
p
gsea_results <-gsea_results@result
gsea_results_top <- gsea_results[gsea_results$p.adjust < 0.05,]
View(gsea_results_top)
View(gsea_results)
gsea_results=clusterProfiler::GSEA(
geneList = gene_list,
TERM2GENE = reactome,
pvalueCutoff = 0.25,
pAdjustMethod = "BH",
verbose = FALSE
)
gsea_results <-gsea_results@result
gsea_results_top <- gsea_results[gsea_results$p.adjust < 0.05,]
View(gsea_results_top)
gsea_results=clusterProfiler::GSEA(
geneList = gene_list,
TERM2GENE = reactome,
pvalueCutoff = 0.25,
pAdjustMethod = "BH",
verbose = FALSE,
eps = 0
)
gsea_results <-gsea_results@result
gsea_results_top <- gsea_results[gsea_results$p.adjust < 0.05,]
View(gsea_results_top)
gsea_results_top <- gsea_results[gsea_results$p.adjust < 0.01 & gsea_results$NES >1,]
gsea_results_top$minus_logFDR= -log10(gsea_results_top$p.adjust)
gsea_results_top <- gsea_results[gsea_results$p.adjust < 0.01 & gsea_results$NES >2,]
gsea_results_top <- gsea_results[gsea_results$p.adjust < 0.01 & gsea_results$NES >3,]
gsea_results_top <- gsea_results[gsea_results$p.adjust < 0.01 & abs(gsea_results$NES )>2,]
gsea_results_top <- gsea_results[gsea_results$p.adjust < 0.01 & abs(gsea_results$NES )>2.5,]
gsea_results_top$minus_logFDR= -log10(gsea_results_top$p.adjust)
p=ggplot(gsea_results_top, aes(
x = reorder(ID, NES),
y = NES,
fill = NES,
alpha=minus_logFDR,
)) +
geom_point(shape = 21, colour = "black",size=10) +
scale_fill_gradient2(
low = "steelblue", mid = "white", high = "red",
midpoint = 0,
name = "Enrichment"
) + scale_alpha(range = c(0.3, 1),
name = "LogFDR") +
labs(
x = "Pathway",
y = "NES",
title = paste0("Treated Vs. Naive")
) +
coord_flip() +my_theme
p
gsea_results_top <- gsea_results[gsea_results$p.adjust < 0.01 & abs(gsea_results$NES )>2,]
gsea_results_top$minus_logFDR= -log10(gsea_results_top$p.adjust)
p=ggplot(gsea_results_top, aes(
x = reorder(ID, NES),
y = NES,
fill = NES,
alpha=minus_logFDR,
)) +
geom_point(shape = 21, colour = "black",size=10) +
scale_fill_gradient2(
low = "steelblue", mid = "white", high = "red",
midpoint = 0,
name = "Enrichment"
) + scale_alpha(range = c(0.3, 1),
name = "LogFDR") +
labs(
x = "Pathway",
y = "NES",
title = paste0("Treated Vs. Naive")
) +
coord_flip() +my_theme
p
View(gsea_results_top)
View(gsea_results)
View(reactome)
gsea_results=clusterProfiler::GSEA(
geneList = gene_list,
TERM2GENE = reactome,
pvalueCutoff = 0.05,
pAdjustMethod = "BH"
)
gsea_results <-gsea_results@result
gsea_results_top <- gsea_results[gsea_results$p.adjust < 0.01 & abs(gsea_results$NES )>2,]
gsea_results_top$minus_logFDR= -log10(gsea_results_top$p.adjust)
p=ggplot(gsea_results_top, aes(
x = reorder(ID, NES),
y = NES,
fill = NES,
alpha=minus_logFDR,
)) +
geom_point(shape = 21, colour = "black",size=10) +
scale_fill_gradient2(
low = "steelblue", mid = "white", high = "red",
midpoint = 0,
name = "Enrichment"
) + scale_alpha(range = c(0.3, 1),
name = "LogFDR") +
labs(
x = "Pathway",
y = "NES",
title = paste0("Treated Vs. Naive")
) +
coord_flip() +my_theme
p
# we want the log2 fold change *padjusted
treated_vs_naive$score <- sign(treated_vs_naive$avg_log2FC) * (-log10(treated_vs_naive$p_val_adj + 1e-10))
View(treated_vs_naive)
# we want the log2 fold change *padjusted
treated_vs_naive$score <- sign(treated_vs_naive$avg_log2FC) * (-log10(treated_vs_naive$p_val_adj + 1e-10))
View(treated_vs_naive)
# we want the log2 fold change *padjusted
treated_vs_naive$score <- sign(treated_vs_naive$avg_log2FC) * (-log10(treated_vs_naive$p_val_adj ))
View(treated_vs_naive)
+ 1e-10
# we want the log2 fold change *padjusted
treated_vs_naive$score <- sign(treated_vs_naive$avg_log2FC) * (-log10(treated_vs_naive$p_val_adj + 1e-10))
gene_list <- treated_vs_naive$avg_log2FC
# name the vector
names(gene_list) <- rownames(treated_vs_naive)
# omit any NA values
gene_list<-na.omit(gene_list)
gene_list <- treated_vs_naive$score
# name the vector
names(gene_list) <- rownames(treated_vs_naive)
# omit any NA values
gene_list<-na.omit(gene_list)
# sort the list in decreasing order (required for clusterProfiler)
BiocParallel::register(BiocParallel::SerialParam()) #fix serialize error
options(mc.cores = 1)
set.seed(1)
gene_list = sort(gene_list, decreasing = TRUE)
gsea_results=clusterProfiler::GSEA(
geneList = gene_list,
TERM2GENE = hallmark,
pvalueCutoff = 0.25,
pAdjustMethod = "BH",
verbose = FALSE
)
gsea_results <-gsea_results@result
gsea_results$minus_logFDR= -log10(gsea_results$p.adjust)
p=ggplot(gsea_results, aes(
x = reorder(ID, NES),
y = NES,
fill = NES,
alpha=minus_logFDR,
#size = `-logFDR`
)) +
geom_point(shape = 21, colour = "black",size=10) +
scale_fill_gradient2(
low = "steelblue", mid = "white", high = "red",
midpoint = 0,
name = "Enrichment"
) + scale_alpha(range = c(0.3, 1),
name = "LogFDR") +
labs(
x = "Pathway",
y = "NES",
title = paste0("Treated Vs. Naive")
) +
coord_flip() +my_theme
p
gsea_results=clusterProfiler::GSEA(
geneList = gene_list,
TERM2GENE = hallmark,
pvalueCutoff = 0.05,
pAdjustMethod = "BH",
verbose = FALSE
)
gsea_results <-gsea_results@result
gsea_results$minus_logFDR= -log10(gsea_results$p.adjust)
p=ggplot(gsea_results, aes(
x = reorder(ID, NES),
y = NES,
fill = NES,
alpha=minus_logFDR,
#size = `-logFDR`
)) +
geom_point(shape = 21, colour = "black",size=10) +
scale_fill_gradient2(
low = "steelblue", mid = "white", high = "red",
midpoint = 0,
name = "Enrichment"
) + scale_alpha(range = c(0.3, 1),
name = "LogFDR") +
labs(
x = "Pathway",
y = "NES",
title = paste0("Treated Vs. Naive")
) +
coord_flip() +my_theme
p
write.csv(gsea_results,"csv/hallmark_ranked_by_score.csv")
p
dev.off()
# the same analysis but with RECTOME ----------
reactome <- msigdbr(species = "Homo sapiens", category = "C2", subcollection = "CP:REACTOME") |>
select(gs_name, gene_symbol) |> distinct()
gsea_results=clusterProfiler::GSEA(
geneList = gene_list,
TERM2GENE = reactome,
pvalueCutoff = 0.05,
pAdjustMethod = "BH",
verbose = FALSE
)
gsea_results <-gsea_results@result
gsea_results$minus_logFDR= -log10(gsea_results$p.adjust)
p=ggplot(gsea_results, aes(
x = reorder(ID, NES),
y = NES,
fill = NES,
alpha=minus_logFDR,
#size = `-logFDR`
)) +
geom_point(shape = 21, colour = "black",size=10) +
scale_fill_gradient2(
low = "steelblue", mid = "white", high = "red",
midpoint = 0,
name = "Enrichment"
) + scale_alpha(range = c(0.3, 1),
name = "LogFDR") +
labs(
x = "Pathway",
y = "NES",
title = paste0("Treated Vs. Naive")
) +
coord_flip() +my_theme
p
gsea_results=clusterProfiler::GSEA(
geneList = gene_list,
TERM2GENE = hallmark,
pvalueCutoff = 0.05,
pAdjustMethod = "BH",
ep=0
)
View(gsea_results)
View(gsea_results@result)
gsea_results=clusterProfiler::GSEA(
geneList = gene_list,
TERM2GENE = reactome,
pvalueCutoff = 0.05,
pAdjustMethod = "BH",
ep=0
)
gsea_results <-gsea_results@result
View(gsea_results)
View(gsea_results_top)
View(gsea_results)
gene_list = sort(gene_list, decreasing = TRUE)
gsea_results=clusterProfiler::GSEA(
geneList = gene_list,
TERM2GENE = hallmark,
pvalueCutoff = 0.05,
pAdjustMethod = "BH",
verbose = FALSE
)
gsea_results <-gsea_results@result
gsea_results$minus_logFDR= -log10(gsea_results$p.adjust)
p=ggplot(gsea_results, aes(
x = reorder(ID, NES),
y = NES,
fill = NES,
alpha=minus_logFDR,
#size = `-logFDR`
)) +
geom_point(shape = 21, colour = "black",size=10) +
scale_fill_gradient2(
low = "steelblue", mid = "white", high = "red",
midpoint = 0,
name = "Enrichment"
) + scale_alpha(range = c(0.3, 1),
name = "LogFDR") +
labs(
x = "Pathway",
y = "NES",
title = paste0("Treated Vs. Naive")
) +
coord_flip() +my_theme
png("plots/halmark.png", width = 600*6, height = 300*6 , res = 300)
write.csv(gsea_results,"csv/hallmark_ranked_by_score.csv")
p
dev.off()
png("plots/halmark.png", width = 500*6, height = 300*6 , res = 300)
write.csv(gsea_results,"csv/hallmark_ranked_by_score.csv")
p
dev.off()
png("plots/halmark.png", width = 400*6, height = 300*6 , res = 300)
write.csv(gsea_results,"csv/hallmark_ranked_by_score.csv")
p
dev.off()
reactome <- msigdbr(species = "Homo sapiens", category = "C2", subcollection = "CP:REACTOME") |>
select(gs_name, gene_symbol) |> distinct()
gsea_results=clusterProfiler::GSEA(
geneList = gene_list,
TERM2GENE = reactome,
pvalueCutoff = 0.05,
pAdjustMethod = "BH",
ep=0
)
gsea_results=clusterProfiler::GSEA(
geneList = gene_list,
TERM2GENE = reactome,
pvalueCutoff = 0.05,
pAdjustMethod = "BH",
nPermSimple = 10000,
ep=0
)
View(gsea_results)
View(gsea_results@result)
gsea_results=clusterProfiler::GSEA(
geneList = gene_list,
TERM2GENE = reactome,
pvalueCutoff = 0.05,
pAdjustMethod = "BH",
nPermSimple = 10000,
ep=0,
minGSSize = 20
)
gsea_results <-gsea_results@result
View(gsea_results_top)
#-----scater plot for classical1 basal1 scores-------------
df <- all_samples@meta.data %>%
transmute(
Basal = Basal1, Classical = Classical1,
Treatment = factor(Treatment, levels = c("naive","treated")),
Patient = coalesce(sample_id, orig.ident)
)
#-----scater plot for classical1 basal1 scores-------------
df <- all_samples@meta.data %>%
transmute(
Basal = Basal2, Classical = Classical1,
Treatment = factor(Treatment, levels = c("naive","treated")),
Patient = coalesce(sample_id, orig.ident)
)
sc.subset <- subset(all_samples, subset =cell.types %in% c("Epithelial", "Prolif_Epithelial"))
###############################################################################################
#----------------moffitt----------------------
###############################################################################################
#subset the epithelial cells-----
sc.subset <- subset(all_samples, subset =cell.types %in% c("Epithelial", "Prolif_Epithelial"))
sc.subset <- NormalizeData(sc.subset, normalization.method = "LogNormalize")
###############################################################################################
#----------------moffitt----------------------
###############################################################################################
#subset the epithelial cells-----
gc()
sc.subset <- subset(all_samples, subset =cell.types %in% c("Epithelial", "Prolif_Epithelial"))
sc.subset <- NormalizeData(sc.subset, normalization.method = "LogNormalize")
sc.subset <- FindVariableFeatures(sc.subset, selection.method = "vst", nfeatures = 2000)
